body {
  margin: 0;
  nav {
    display: flex;
    flex-direction: row;
    align-items: stretch;
    justify-content: center;
    background: #4c4c4c;
    a {
      text-decoration: none;
      font-size: 2.5vw;
      color: white;
      margin: 0 1vw;
      padding: 2.5vw 0.5vw;
      &:hover {
        background: darken(#4c4c4c, 5%);
      }
    }
  }

  main {
    height: 35vw;
    background: {
      repeat: no-repeat;
      size: 100% 100%;
      image: url(../planesky.jpg);
    }
    display: flex;
    justify-content: center;
    align-items: center;
    h2 {
      color: white;
      font-weight: bold;
      font-size: 6vw;

    }
  }

  section {
    height: 45vw;
    background: {
      repeat: no-repeat;
      size: 100% 100%;
      image: url(../hamburg.jpg);
    }
    display: flex;
    // define the whole section as a flex so you
    //  arrange the space between your heading,
    //  your paragraph and your form. This is not absolutely
    // necessary but it helps
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    h2 {
      font-size: 4vw;
      color: white;
    }
    p {
      font-size: 1.7vw;
      font-family: tahoma;
      width: 90%;
      color: white;
      background: rgba(0, 0, 0, 0.7);
    }

    form {
      // Make this form a grid container.
      display: grid;
      width: 80%;
      // Grid template defines the rows and columns. Auto means
      // the content defines the height of each row. The more content
      //  you add the more the height of the whole row grows. Fr is a
      //  fraction unit, that means we divide each column equally.
      grid-template: repeat(3, auto) / repeat(6, 1fr);
      // Gap between rows and columns. First the distance bewtween rows,
      // then between columns.
      grid-gap: 1vw 2vw;
      input[type="text"] {
        // define the area the element takes. First the beginning-row,
        // then the beginning column, how many rows this spans, how
        // many columns this spans.
        grid-area: 1 / 2 / span 1 / span 2;
        font-size: 1.5vw;
        padding: 1vw 0.5vw;
      }
      input[type="password"] {
        grid-area: 2 / 2 / span 1 / span 2;
        font-size: 1.5vw;
        padding: 1vw 0.5vw;
      }
      input[type="email"] {
        grid-area: 3 / 2 / span 1 / span 2;
        font-size: 1.5vw;
        padding: 1vw 0.5vw;
      }
      textarea {
        grid-area: 1 / 4 / span 2 / span 2;
        font-size: 1.5vw;
        padding: 1vw 0.5vw;
      }
      button {
        color: white;
        background: green;
        border: none;
        grid-area: 3 / 4 / span 1 / span 1;
        font-size: 1.5vw;
        padding: 1vw 0.5vw;
        :hover {
          cursor: pointer;
        }
      }
    }
  }


  .container {
    width: 80vw;
    margin: 5vw auto;
    display: grid;
    grid-template: repeat(5, 8vw) / 3fr 3fr 2fr 2fr 3fr 3fr 2fr 2fr;
    grid-gap: 0.5vw 0.5vw;

    @each $num, $img in (1, krioneri), (2, parga_2), (3, parga), (4, parga_3),
                        (5, kastro), (6, lixnos), (7, panagia), (8, valtos) {
                          div:nth-of-type(#{$num}) {
                            background-image: url('../#{$img}.jpg');
                            background-size: 100% 100%;
                            background-repeat: no-repeat;
                            transition: width 2s linear 1s;
                             &:hover {
                               box-shadow: -2px 1px black,1px 0 red  ;
                               background-size: 103% 100%;
                             }
                          }
                        }



                              div:nth-of-type(1) {
                                grid-area: 1 /1 /span 3 /span 1;

                              }

                              div:nth-of-type(2) {
                                grid-area: 1 /2 /span 3 /span 1;
                              }

                              div:nth-of-type(3) {
                                grid-area: 1 /3 /span 2 /span 3;
                              }

                              div:nth-of-type(4) {
                                grid-area: 1 /6 /span 2 /span 3;
                              }

                              div:nth-of-type(5) {
                                grid-area: 4 /1 /span 2 /span 2;
                              }

                              div:nth-of-type(6) {
                                grid-area: 3 /3 /span 3 /span 2;
                              }

                              div:nth-of-type(7) {
                                grid-area: 3 /5 /span 3 /span 2;
                              }

                              div:nth-of-type(8) {
                                grid-area: 3 /7 /span 3 /span 2;
                              }
  }
}
